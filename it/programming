#flow control
conditional: decision based on condition
switch: decision based on comparing variable against list of values
for loop: loop repeated defined number of times
while loop: loop repeated until condition changes
foreach: loop repeated for each item in collection
loop exit: end current iteration and start next iteration
loop continuation: end current iteration and exit loop

#variables
data type: specifies valid values (abstract)
variable: storage of value (concrete)

#special variables
flag: boolean variable enabling/disabling some feature

#data types
boolean: true / false
character: symbol
collection: complex data type
float: decimal number
integer: whole number
string: sequence of characters

#collections
array/list: ordered collection of elements
set: unordered collection of unique elements
map/dictionary: collection of key-value pairs, unique keys

#more collection
multiset: unordered collection of elements
multimap: collection of key-value pairs

#special collections
queue: list that adds and retrieves elements in different ends (FIFO)
stack: list that adds and retrieves elements in the same end (LIFO) 
tree

#functions
function: reusable sequence of instructions
argument: input of function (concrete)
parameter: input of function (abstract)
return value: output of function

#objects
class: complex type (abstract)
field: data in class
method: function in class
object: variable, instance of class (concrete)

#standard methods
constructor: creating new object
serialization: converting object to string
comparison: checking if two objects are equal

#parallel computing
Deadlock: all processes waiting on each other

#optimization
Amdahl's law: performance improvement is limited by fraction of time used by improved part
- optimize only long-running parts
